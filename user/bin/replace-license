#!/usr/bin/env python3

import os
import sys


SINGLE_COMMENT_MARKERS = ('#',)
MULTI_COMMENT_MARKERS = ('/*', ' *', ' */')  # Start, during, end

new_license_file = sys.argv[1]

if not new_license_file:
    print('Usage: replace-license <file_with_new_license>')
    print('\nReplace the license header in all files under current directory with the new license')
    sys.exit(1)

SINGLE_LICENSE = ('{0}\n{0}' + '{0}'.join(open(new_license_file).readlines())
                  + '{0}\n').format(SINGLE_COMMENT_MARKERS[0])
MULTI_LICENSE = ((MULTI_COMMENT_MARKERS[0] + '\n{0}'
                  + '{0}'.join(open(new_license_file).readlines())).format(MULTI_COMMENT_MARKERS[1])
                 + MULTI_COMMENT_MARKERS[2] + '\n')


def replace_license(source_file):
    print('Replacing license in', source_file)

    before_comment = []
    first_comment = []
    after_comment = []

    first_comment_finished = False
    is_single = False

    with open(source_file) as fp:
        for line in fp:
            if first_comment_finished:
                after_comment.append(line)

            elif line.startswith(SINGLE_COMMENT_MARKERS + MULTI_COMMENT_MARKERS):
                if line.startswith(SINGLE_COMMENT_MARKERS[0]):
                    is_single = True
                if line.startswith(MULTI_COMMENT_MARKERS[2]):
                    first_comment_finished = True
                else:
                    first_comment.append(line)

            elif first_comment:
                after_comment.append(line)
                first_comment_finished = True

            else:
                before_comment.append(line)

    if first_comment and 'License' in '\n'.join(first_comment):
        with open(source_file, 'w') as fp:
            for line in before_comment:
                fp.write(line)

            if is_single:
                fp.write(SINGLE_LICENSE)
            else:
                fp.write(MULTI_LICENSE)

            for line in after_comment:
                fp.write(line)


for root, dirs, files in os.walk('.'):
    if '/.' in root:
        continue

    for name in files:
        if name.startswith('.'):
            continue

        replace_license(os.path.join(root, name))
